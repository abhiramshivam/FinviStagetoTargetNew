INSERT INTO COM_FINVI_OASIS_ACCOUNT_{PP_TenantName}.ACCOUNT ( 	CREATEDATE, 	LASTUPDATEDATE, 	CREATED_BY, 	MODIFIED_BY, 	ACTIVE, 	CHARGEOFFAMOUNT, 	CHARGEOFFDATE , 	ENTRYDATE, 	LASTLETTERDATE, 	ORIGINALACCOUNTNUMBER, 	PRIORITYSCORE, 	PORTFOLIOID, 	CLIENTID, 	CLIENTOFFICEID, 	CLIENTCONTRACTID, 	UUID, 	LOBID, 	BALANCE, 	ENTRYBALANCE, 	LASTPAYDATE, 	LASTPAYAMOUNT, 	DELINQUENCYDATE, 	MIGRATION_SOURCE_ID ) SELECT 	SYSDATE AS CREATEDATE, 	SYSDATE AS LASTUPDATEDATE,	     (SELECT IDPUSERID FROM COM_FINVI_OASIS_ACCOUNT_{PP_TenantName}.user_ WHERE USERNAME = 'etlmigrationuser@finvi.com') AS CREATED_BY,     (SELECT IDPUSERID FROM COM_FINVI_OASIS_ACCOUNT_{PP_TenantName}.user_ WHERE USERNAME = 'etlmigrationuser@finvi.com') AS MODIFIED_BY, 	'Y' AS ACTIVE, 	ai.ARACCHGOFFAMT AS CHARGEOFFAMOUNT, 	ai.ARACCHGOFFDTE + 0.5 AS CHARGEOFFDATE, 	ai.ARACLSTDTE + 0.5 AS ENTRYDATE, 	ai.ARACLTRDTE + 0.5 AS LASTLETTERDATE, 	ai.ARACCLACCT AS ORIGINALACCOUNTNUMBER, 	0 PRIORITYSCORE, 	90901 AS PROFOLIOID, 	orginfo.CLIENTID, 	orginfo.CLIENTOFFICEID, 	orginfo.CLIENTCONTRACTID, 	SYS_GUID() AS UUID, 	orginfo.LOBID,	 	balinfo.BALANCE, 	balinfo.ENTRYBALANCE, 	ai.ARACCNVLPYDTE + 0.5 AS LASTPAYDATE, 	ai.ARACCNVLPYAMT AS LASTPAYAMOUNT, 	ai.AR{PP_TenantName}ATUTEBASEDTE + 0.5 as DELINQUENCYDATE, 	ai.ACCOUNTID AS MIGRATION_SOURCE_ID	 FROM  	ETL_OASIS_DATA_MIG_{PP_TenantName}.ETL_STG_ACCOUNT_INFO ai 	LEFT OUTER JOIN  	( 		SELECT  			abi.ACCOUNTID, 			SUM 			( 				NVL(abi.ATYLS_INITIALBALANCE, 0) 				+ NVL(abi.CCLIS_INITIALBALANCE, 0) 				+ NVL(abi.INT_INITIALBALANCE, 0) 				+ NVL(abi.LI3_INITIALBALANCE, 0) 				+ NVL(abi.LI4_INITIALBALANCE, 0) 				+ NVL(abi.PRN_INITIALBALANCE, 0) 				+ NVL(abi.UD6_INITIALBALANCE, 0) 		    ) AS ENTRYBALANCE , 			SUM 			( 				NVL(abi.AIN_CURRENTBALANCE, 0) 				+ NVL(abi.ATY_CURRENTBALANCE, 0) 				+ NVL(abi.ATYLS_CURRENTBALANCE, 0) 				+ NVL(abi.CCAGY_CURRENTBALANCE, 0) 				+ NVL(abi.CCCLT_CURRENTBALANCE, 0) 				+ NVL(abi.CCLIS_CURRENTBALANCE, 0) 				+ NVL(abi.CKFEE_CURRENTBALANCE, 0) 				+ NVL(abi.IN_CURRENTBALANCE, 0) 				+ NVL(abi.INT_CURRENTBALANCE, 0) 				+ NVL(abi.LFAGY_CURRENTBALANCE, 0) 				+ NVL(abi.LFCLT_CURRENTBALANCE, 0) 				+ NVL(abi.LGADV_CURRENTBALANCE, 0) 				+ NVL(abi.LI3_CURRENTBALANCE, 0) 				+ NVL(abi.LI4_CURRENTBALANCE, 0) 				+ NVL(abi.MS1_CURRENTBALANCE, 0) 				+ NVL(abi.PA_CURRENTBALANCE, 0) 				+ NVL(abi.PJI_CURRENTBALANCE, 0) 				+ NVL(abi.PRN_CURRENTBALANCE, 0) 				+ NVL(abi.REFRC_CURRENTBALANCE, 0) 				+ NVL(abi.UD7_CURRENTBALANCE, 0) 			) AS BALANCE 	    FROM ETL_OASIS_DATA_MIG_{PP_TenantName}.ETL_STG_ACCT_BAL_INFO  abi       	   	GROUP BY abi.ACCOUNTID 	) balinfo ON ai.ACCOUNTID = balinfo.ACCOUNTID 	LEFT OUTER JOIN  	(    		SELECT   			ACO.UUID CLIENTID, 			ACO1.UUID AS CLIENTOFFICEID, 			ACO2.UUID AS CLIENTCONTRACTID, 			ACO2.ORGANIZATION_ID , 			ACO2.LINE_OF_BUSINESS_ID AS LOBID 		FROM 			COM_FINVI_OASIS_CLIENTANDCREDITOR_{PP_TenantName}.AJ_CORE_ORGANIZATION ACO, 			COM_FINVI_OASIS_CLIENTANDCREDITOR_{PP_TenantName}.AJ_CORE_ORGANIZATION ACO1, 			COM_FINVI_OASIS_CLIENTANDCREDITOR_{PP_TenantName}.AJ_CORE_ORGANIZATION ACO2 		WHERE ACO.ORGANIZATION_ID = ACO1.PARENT_ORGANIZATION 			AND ACO.ORGANIZATION_ID = ACO1.PARENT_ORGANIZATION 			AND ACO1.ORGANIZATION_ID = ACO2.PARENT_ORGANIZATION			 			AND ACO.ORGANIZATION_ID = ACO2.ROOT_ORGANIZATION_ID			 			AND ACO.org_type = 'client' AND ACO.active = 1 			AND ACO1.org_type = 'office' AND ACO1.active = 1			 			AND ACO2.org_type = 'contract' AND ACO2.active = 1			 	) orginfo 	ON orginfo.ORGANIZATION_ID = ai.ARACCLTID